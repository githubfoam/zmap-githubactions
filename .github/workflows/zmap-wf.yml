name: "zmap CI workflow"


on:
  push:
    branches: [ main ]


jobs:

  ubuntu-latest-job:
    name: "kali-tools-vulnerability ubuntu 20.04"
    runs-on: ubuntu-latest
    env:
      distribution: "kalilinux" #https://hub.docker.com/r/kalilinux/kali-rolling
      version: "latest"
      name: "kali/zmap"
      dockerfiledir: "dockerfiles"
      dockerfilename: "Dockerfile.zmap"
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: |
        hostnamectl status
        lsb_release -a
        lsb_release -d
        cat /etc/lsb-release
        cat /etc/issue
        cat /etc/os-release
        sudo apt-get install -y neofetch && neofetch   
    - name: "docker build kali linux"
      run: |
        # destroyed afterwards (use --rm )
        # all subsequent Dockerfile commands generate new images and the cache is not used
        # sudo docker build --no-cache --rm  -t ${name}:${version} . --file ${dockerfiledir}/${dockerfilename} 
        whoami
        echo ${USER} 
        #Add current logged in user to the docker group.
        sudo usermod -aG docker ${USER}
        id  ${USER}
        docker build --no-cache --rm  -t ${name}:${version} . --file dockerfiles/${dockerfilename} 
        docker image ls
        docker image history ${name}:${version} 
        docker system df -v               
        docker image inspect ${name}:${version}  
        docker inspect -f '{{.Config.Entrypoint}}' ${name}:${version}
        docker run ${name}:${version} zmap -h       
        # docker run ${name}:${version} zmap -p 80 172.217.0.0/24 -o IPresults.csv # not OK


           